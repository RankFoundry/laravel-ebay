<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace Rankfoundry\eBaySDK\Marketing\Services;

class MarketingService extends \Rankfoundry\eBaySDK\Marketing\Services\MarketingBaseService
{
    const API_VERSION = 'v1';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'BulkCreateAdsByInventoryReference' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/bulk_create_ads_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'BulkCreateAdsByListingID' => [
            'method' => 'POST',
            'resource' => 'campaign/{campaign_id}/bulk_create_ads_by_listing_id',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'BulkDeleteAdsByInventoryReference' => [
            'method' => 'POST',
            'resource' => 'campaign/{campaign_id}/bulk_delete_ads_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'BulkDeleteAdsByListingID' => [
            'method' => 'POST',
            'resource' => 'campaign/{campaign_id}/bulk_delete_ads_by_listing_id',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'BulkUpdateAdBidsByInventoryReference' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/bulk_update_ads_bid_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'BulkUpdateAdBidsByListingID' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/bulk_update_ads_bid_by_listing_id',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateAdByListingID' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/ad',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateAdsByInventoryReference' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/create_ads_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'DeleteAdByID' => [
            'method' => 'DELETE',
            'resource' => 'ad_campaign/{campaign_id}/ad/{ad_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestResponse',
            'params' => [
                'ad_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'DeleteAdsByInventoryReference' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/delete_ads_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAdByID' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/{campaign_id}/ad/{ad_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestResponse',
            'params' => [
                'ad_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAds' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/{campaign_id}/ad',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'listing_ids' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'offset' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetAdsByInventoryReference' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/{campaign_id}/get_ads_by_inventory_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'inventory_reference_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'inventory_reference_type' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateBid' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/ad/{ad_id}/update_bid',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestResponse',
            'params' => [
                'ad_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CloneCampaign' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/clone',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateCampaign' => [
            'method' => 'POST',
            'resource' => 'ad_campaign',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestResponse',
            'params' => [
            ]
        ],
        'DeleteCampaign' => [
            'method' => 'DELETE',
            'resource' => 'ad_campaign/{campaign_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'EndCampaign' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/end',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'FindCampaignByAdReference' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/find_campaign_by_ad_reference',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestResponse',
            'params' => [
                'inventory_reference_id' => [
                    'valid' => ['string']
                ],
                'inventory_reference_type' => [
                    'valid' => ['string']
                ],
                'listing_id' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetAllCampaigns' => [
            'method' => 'GET',
            'resource' => 'ad_campaign',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestResponse',
            'params' => [
                'campaign_name' => [
                    'valid' => ['string']
                ],
                'campaign_status' => [
                    'valid' => ['string']
                ],
                'end_date_range' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'start_date_range' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetCampaignByName' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/get_campaign_by_name',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestResponse',
            'params' => [
                'campaign_name' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetCampaignByID' => [
            'method' => 'GET',
            'resource' => 'ad_campaign/{campaign_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'PauseCampaign' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/pause',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ResumeCampaign' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/resume',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateCampaignIDentification' => [
            'method' => 'POST',
            'resource' => 'ad_campaign/{campaign_id}/update_campaign_identification',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestResponse',
            'params' => [
                'campaign_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateItemPromotion' => [
            'method' => 'POST',
            'resource' => 'item_promotion',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestResponse',
            'params' => [
            ]
        ],
        'DeleteItemPromotion' => [
            'method' => 'DELETE',
            'resource' => 'item_promotion/{promotion_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetItemPromotion' => [
            'method' => 'GET',
            'resource' => 'item_promotion/{promotion_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'UpdateItemPromotion' => [
            'method' => 'PUT',
            'resource' => 'item_promotion/{promotion_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetListingsInSpecificPromotion' => [
            'method' => 'GET',
            'resource' => 'promotion/{promotion_id}/get_listing_set',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string']
                ],
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'q' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetPromotions' => [
            'method' => 'GET',
            'resource' => 'promotion',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestResponse',
            'params' => [
                'limit' => [
                    'valid' => ['string']
                ],
                'marketplace_id' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'promotion_status' => [
                    'valid' => ['string']
                ],
                'q' => [
                    'valid' => ['string']
                ],
                'sort' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'PauseAPromotion' => [
            'method' => 'POST',
            'resource' => 'promotion/{promotion_id}/pause',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'ResumeAPromotion' => [
            'method' => 'POST',
            'resource' => 'promotion/{promotion_id}/resume',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestResponse',
            'params' => [
                'promotion_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetPromotionSummaryReport' => [
            'method' => 'GET',
            'resource' => 'promotion_summary_report',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestResponse',
            'params' => [
                'marketplace_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetSpecificReport' => [
            'method' => 'GET',
            'resource' => 'ad_report/{report_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestResponse',
            'params' => [
                'report_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetMetadataForAllReports' => [
            'method' => 'GET',
            'resource' => 'ad_report_metadata',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestResponse',
            'params' => [
            ]
        ],
        'GetMetadataForAReportType' => [
            'method' => 'GET',
            'resource' => 'ad_report_metadata/{report_type}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestResponse',
            'params' => [
                'report_type' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'CreateReportTask' => [
            'method' => 'POST',
            'resource' => 'ad_report_task',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\CreateReportTasktRestResponse',
            'params' => [
            ]
        ],
        'DeleteSpecificReportTask' => [
            'method' => 'DELETE',
            'resource' => 'ad_report_task/{report_task_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestResponse',
            'params' => [
                'report_task_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetReportTasks' => [
            'method' => 'GET',
            'resource' => 'ad_report_task',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestResponse',
            'params' => [
                'limit' => [
                    'valid' => ['string']
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'report_task_statuses' => [
                    'valid' => ['string']
                ]
            ]
        ],
        'GetSpecificReportTask' => [
            'method' => 'GET',
            'resource' => 'ad_report_task/{report_task_id}',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestResponse',
            'params' => [
                'report_task_id' => [
                    'valid' => ['string'],
                    'required' => true
                ]
            ]
        ],
        'GetAPromotionReport' => [
            'method' => 'GET',
            'resource' => 'promotion_report',
            'responseClass' => '\Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestResponse',
            'params' => [
                'limit' => [
                    'valid' => ['string']
                ],
                'marketplace_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
                'offset' => [
                    'valid' => ['string']
                ],
                'promotion_status' => [
                    'valid' => ['string']
                ],
                'q' => [
                    'valid' => ['string']
                ]
            ]
        ]
    ];

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestResponse
     */
    public function bulkCreateAdsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestRequest $request)
    {
        return $this->bulkCreateAdsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkCreateAdsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('BulkCreateAdsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestResponse
     */
    public function bulkCreateAdsByListingID(\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestRequest $request)
    {
        return $this->bulkCreateAdsByListingIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkCreateAdsByListingIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkCreateAdsByListingIDRestRequest $request)
    {
        return $this->callOperationAsync('BulkCreateAdsByListingID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestResponse
     */
    public function bulkDeleteAdsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestRequest $request)
    {
        return $this->bulkDeleteAdsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkDeleteAdsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('BulkDeleteAdsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestResponse
     */
    public function bulkDeleteAdsByListingID(\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestRequest $request)
    {
        return $this->bulkDeleteAdsByListingIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkDeleteAdsByListingIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkDeleteAdsByListingIDRestRequest $request)
    {
        return $this->callOperationAsync('BulkDeleteAdsByListingID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestResponse
     */
    public function bulkUpdateAdBidsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestRequest $request)
    {
        return $this->bulkUpdateAdBidsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkUpdateAdBidsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('BulkUpdateAdBidsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestResponse
     */
    public function bulkUpdateAdBidsByListingID(\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestRequest $request)
    {
        return $this->bulkUpdateAdBidsByListingIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function bulkUpdateAdBidsByListingIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\BulkUpdateAdBidsByListingIDRestRequest $request)
    {
        return $this->callOperationAsync('BulkUpdateAdBidsByListingID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestResponse
     */
    public function createAdByListingID(\Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestRequest $request)
    {
        return $this->createAdByListingIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createAdByListingIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\CreateAdByListingIDRestRequest $request)
    {
        return $this->callOperationAsync('CreateAdByListingID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestResponse
     */
    public function createAdsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestRequest $request)
    {
        return $this->createAdsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createAdsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\CreateAdsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('CreateAdsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestResponse
     */
    public function deleteAdByID(\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestRequest $request)
    {
        return $this->deleteAdByIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteAdByIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdByIDRestRequest $request)
    {
        return $this->callOperationAsync('DeleteAdByID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestResponse
     */
    public function deleteAdsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestRequest $request)
    {
        return $this->deleteAdsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteAdsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\DeleteAdsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('DeleteAdsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestResponse
     */
    public function getAdByID(\Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestRequest $request)
    {
        return $this->getAdByIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getAdByIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetAdByIDRestRequest $request)
    {
        return $this->callOperationAsync('GetAdByID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestResponse
     */
    public function getAds(\Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestRequest $request)
    {
        return $this->getAdsAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getAdsAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetAdsRestRequest $request)
    {
        return $this->callOperationAsync('GetAds', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestResponse
     */
    public function getAdsByInventoryReference(\Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestRequest $request)
    {
        return $this->getAdsByInventoryReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getAdsByInventoryReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetAdsByInventoryReferenceRestRequest $request)
    {
        return $this->callOperationAsync('GetAdsByInventoryReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestResponse
     */
    public function updateBid(\Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestRequest $request)
    {
        return $this->updateBidAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateBidAsync(\Rankfoundry\eBaySDK\Marketing\Types\UpdateBidRestRequest $request)
    {
        return $this->callOperationAsync('UpdateBid', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestResponse
     */
    public function cloneCampaign(\Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestRequest $request)
    {
        return $this->cloneCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function cloneCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\CloneCampaignRestRequest $request)
    {
        return $this->callOperationAsync('CloneCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestResponse
     */
    public function createCampaign(\Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestRequest $request)
    {
        return $this->createCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\CreateCampaignRestRequest $request)
    {
        return $this->callOperationAsync('CreateCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestResponse
     */
    public function deleteCampaign(\Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestRequest $request)
    {
        return $this->deleteCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\DeleteCampaignRestRequest $request)
    {
        return $this->callOperationAsync('DeleteCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestResponse
     */
    public function endCampaign(\Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestRequest $request)
    {
        return $this->endCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function endCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\EndCampaignRestRequest $request)
    {
        return $this->callOperationAsync('EndCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestResponse
     */
    public function findCampaignByAdReference(\Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestRequest $request)
    {
        return $this->findCampaignByAdReferenceAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function findCampaignByAdReferenceAsync(\Rankfoundry\eBaySDK\Marketing\Types\FindCampaignByAdReferenceRestRequest $request)
    {
        return $this->callOperationAsync('FindCampaignByAdReference', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestResponse
     */
    public function getAllCampaigns(\Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestRequest $request)
    {
        return $this->getAllCampaignsAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getAllCampaignsAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetAllCampaignsRestRequest $request)
    {
        return $this->callOperationAsync('GetAllCampaigns', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestResponse
     */
    public function getCampaignByName(\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestRequest $request)
    {
        return $this->getCampaignByNameAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCampaignByNameAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByNameRestRequest $request)
    {
        return $this->callOperationAsync('GetCampaignByName', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestResponse
     */
    public function getCampaignByID(\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestRequest $request)
    {
        return $this->getCampaignByIDAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getCampaignByIDAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetCampaignByIDRestRequest $request)
    {
        return $this->callOperationAsync('GetCampaignByID', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestResponse
     */
    public function pauseCampaign(\Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestRequest $request)
    {
        return $this->pauseCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function pauseCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\PauseCampaignRestRequest $request)
    {
        return $this->callOperationAsync('PauseCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestResponse
     */
    public function resumeCampaign(\Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestRequest $request)
    {
        return $this->resumeCampaignAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function resumeCampaignAsync(\Rankfoundry\eBaySDK\Marketing\Types\ResumeCampaignRestRequest $request)
    {
        return $this->callOperationAsync('ResumeCampaign', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestResponse
     */
    public function updateCampaignIDentification(\Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestRequest $request)
    {
        return $this->updateCampaignIDentificationAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateCampaignIDentificationAsync(\Rankfoundry\eBaySDK\Marketing\Types\UpdateCampaignIDentificationRestRequest $request)
    {
        return $this->callOperationAsync('UpdateCampaignIDentification', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestResponse
     */
    public function createItemPromotion(\Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestRequest $request)
    {
        return $this->createItemPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createItemPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\CreateItemPromotionRestRequest $request)
    {
        return $this->callOperationAsync('CreateItemPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestResponse
     */
    public function deleteItemPromotion(\Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestRequest $request)
    {
        return $this->deleteItemPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteItemPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\DeleteItemPromotionRestRequest $request)
    {
        return $this->callOperationAsync('DeleteItemPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestResponse
     */
    public function getItemPromotion(\Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestRequest $request)
    {
        return $this->getItemPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetItemPromotionRestRequest $request)
    {
        return $this->callOperationAsync('GetItemPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestResponse
     */
    public function updateItemPromotion(\Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestRequest $request)
    {
        return $this->updateItemPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function updateItemPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\UpdateItemPromotionRestRequest $request)
    {
        return $this->callOperationAsync('UpdateItemPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestResponse
     */
    public function getListingsInSpecificPromotion(\Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestRequest $request)
    {
        return $this->getListingsInSpecificPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getListingsInSpecificPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetListingsInSpecificPromotionRestRequest $request)
    {
        return $this->callOperationAsync('GetListingsInSpecificPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestResponse
     */
    public function getPromotions(\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestRequest $request)
    {
        return $this->getPromotionsAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getPromotionsAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionsRestRequest $request)
    {
        return $this->callOperationAsync('GetPromotions', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestResponse
     */
    public function pauseAPromotion(\Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestRequest $request)
    {
        return $this->pauseAPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function pauseAPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\PauseAPromotionRestRequest $request)
    {
        return $this->callOperationAsync('PauseAPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestResponse
     */
    public function resumeAPromotion(\Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestRequest $request)
    {
        return $this->resumeAPromotionAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function resumeAPromotionAsync(\Rankfoundry\eBaySDK\Marketing\Types\ResumeAPromotionRestRequest $request)
    {
        return $this->callOperationAsync('ResumeAPromotion', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestResponse
     */
    public function getPromotionSummaryReport(\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestRequest $request)
    {
        return $this->getPromotionSummaryReportAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getPromotionSummaryReportAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetPromotionSummaryReportRestRequest $request)
    {
        return $this->callOperationAsync('GetPromotionSummaryReport', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestResponse
     */
    public function getSpecificReport(\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestRequest $request)
    {
        return $this->getSpecificReportAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getSpecificReportAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportRestRequest $request)
    {
        return $this->callOperationAsync('GetSpecificReport', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestResponse
     */
    public function getMetadataForAllReports(\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestRequest $request)
    {
        return $this->getMetadataForAllReportsAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getMetadataForAllReportsAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAllReportsRestRequest $request)
    {
        return $this->callOperationAsync('GetMetadataForAllReports', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestResponse
     */
    public function getMetadataForAReportType(\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestRequest $request)
    {
        return $this->getMetadataForAReportTypeAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getMetadataForAReportTypeAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetMetadataForAReportTypeRestRequest $request)
    {
        return $this->callOperationAsync('GetMetadataForAReportType', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateReportTaskRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\CreateReportTasktRestResponse
     */
    public function createReportTask(\Rankfoundry\eBaySDK\Marketing\Types\CreateReportTaskRestRequest $request)
    {
        return $this->createReportTaskAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\CreateReportTaskRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createReportTaskAsync(\Rankfoundry\eBaySDK\Marketing\Types\CreateReportTaskRestRequest $request)
    {
        return $this->callOperationAsync('CreateReportTask', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestResponse
     */
    public function deleteSpecificReportTask(\Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestRequest $request)
    {
        return $this->deleteSpecificReportTaskAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function deleteSpecificReportTaskAsync(\Rankfoundry\eBaySDK\Marketing\Types\DeleteSpecificReportTaskRestRequest $request)
    {
        return $this->callOperationAsync('DeleteSpecificReportTask', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestResponse
     */
    public function getReportTasks(\Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestRequest $request)
    {
        return $this->getReportTasksAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getReportTasksAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetReportTasksRestRequest $request)
    {
        return $this->callOperationAsync('GetReportTasks', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestResponse
     */
    public function getSpecificReportTask(\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestRequest $request)
    {
        return $this->getSpecificReportTaskAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getSpecificReportTaskAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetSpecificReportTaskRestRequest $request)
    {
        return $this->callOperationAsync('GetSpecificReportTask', $request);
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestRequest $request
     * @return \Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestResponse
     */
    public function getAPromotionReport(\Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestRequest $request)
    {
        return $this->getAPromotionReportAsync($request)->wait();
    }

    /**
     * @param \Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getAPromotionReportAsync(\Rankfoundry\eBaySDK\Marketing\Types\GetAPromotionReportRestRequest $request)
    {
        return $this->callOperationAsync('GetAPromotionReport', $request);
    }
}
